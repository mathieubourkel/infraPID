{
  "version": 3,
  "sources": ["../../deleteArchiLambda.ts", "../../../../../bounded-contexts/build-infra/domain/entities/architecture.ts", "../../../../../bounded-contexts/build-infra/app/dto/architecture.dto.ts", "../../../../../bounded-contexts/build-infra/app/mappers/architecture.mapper.ts", "../../../../../bounded-contexts/build-infra/app/use-cases/add-archi-template.usecase.ts", "../../../../driven/dynamodb-architecture/dynamodb.repository.ts"],
  "sourcesContent": ["import { Handler, APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { AddArchiTemplateUseCase } from '../../../bounded-contexts/build-infra/app/use-cases/add-archi-template.usecase';\nimport { DynamoDbArchitectureRepository } from '../../driven/dynamodb-architecture/dynamodb.repository';\nimport { ArchitectureMapper } from '../../../bounded-contexts/build-infra/app/mappers/architecture.mapper';\n\nconst DYNAMODB_TABLE = process.env.DYNAMODB_TABLE || ''\nconst architectureRepository = new DynamoDbArchitectureRepository(DYNAMODB_TABLE)\n\n\nexport const handler:Handler = async (event:APIGatewayProxyEvent):Promise<APIGatewayProxyResult> => {\n    try {\n        const dto = ArchitectureMapper.toDto(event.body)\n        const result = new AddArchiTemplateUseCase(architectureRepository).execute(dto)\n        return {\n            statusCode: 201,\n            body: JSON.stringify({\n              message: \"ARCHI ADD SUCCESSFULY\",\n              result\n            }),\n          };\n    } catch (e) {\n        return {\n            statusCode: 500,\n            body: JSON.stringify({\n              message: \"INTERNAL ERROR\",\n              error: e\n            }),\n          };\n    }\n  \n}\n", "import { ArchitectureStatus } from \"../enums/architecture.status.enum\"\nimport { ProvidersEnum } from \"../enums/providers.enum\"\nimport { IResource, IResources } from \"../interfaces/resource-attributes.interface\"\n\nexport class Architecture {\n    private readonly id?: string\n    private readonly status: ArchitectureStatus\n    private readonly provider: ProvidersEnum\n    private readonly description: string\n    readonly name: string\n    private resources: IResources\n\n    constructor(status: ArchitectureStatus, provider: ProvidersEnum, description: string, name: string, resources: IResources, id?: string){\n        this.id = id ? id : `${Date.now()}-${Math.floor(Math.random() * 10000)}`\n        this.provider = provider\n        this.status = status\n        this.description = description\n        this.name = name\n        this.resources = resources\n    } \n\n    getInfos(): {id: string | undefined, status: ArchitectureStatus, provider: ProvidersEnum, description: string, name: string} {\n        return {id: this.id, status: this.status, provider: this.provider, description: this.description, name: this.name}\n    }\n\n    getAllResources(): IResources{\n        return this.resources\n    }\n\n    addResource(resource: IResource | IResources): void {\n        if (Array.isArray(resource)) resource.map((resource) => this.resources.push(resource))\n        else this.resources.push(resource)    \n    }\n\n    removeResource(resource: IResource | IResources): void {\n        if (Array.isArray(resource)) {\n            resource.map((resource: IResource) => {\n                this.resources = this.resources.filter(res => res !== resource)\n            })\n        } else {\n            this.resources = this.resources.filter(res => res !== resource)\n        }  \n    }\n\n}", "import { ArchitectureStatus } from \"../../domain/enums/architecture.status.enum\";\nimport { ProvidersEnum } from \"../../domain/enums/providers.enum\";\nimport { IResources } from \"../../domain/interfaces/resource-attributes.interface\";\n\nexport class ArchitectureDto {\n    constructor(\n        public status: ArchitectureStatus,\n        public provider: ProvidersEnum,\n        public description: string,\n        public name: string,\n        public resources: IResources,\n        public id?:number\n    ){}\n\n}", "import { Architecture } from \"../../domain/entities/architecture\";\nimport { ArchitectureDto } from \"../dto/architecture.dto\";\n\nexport class ArchitectureMapper {\n    static toDomain(dto: any): Architecture {\n        return new Architecture(dto.status, dto.provider, dto.description, dto.name, dto.resources)\n    }\n\n    static toDomainWithId(dto: any): Architecture {\n        return new Architecture(dto.status, dto.provider, dto.description, dto.name, dto.resources, dto.id)\n    }\n\n    static toDto(body: any): ArchitectureDto{\n        return new ArchitectureDto(body.status, body.provider, body.description, body.name, body.resources)\n    }\n\n    static toDtoWithId(body: any): ArchitectureDto{\n        return new ArchitectureDto(body.status, body.provider, body.description, body.name, body.resources, body.id)\n    }\n}", "import { ArchitectureRepository } from \"../../domain/repositories/architecture.repository\"\nimport { ArchitectureDto } from \"../dto/architecture.dto\"\nimport { ArchitectureMapper } from \"../mappers/architecture.mapper\"\n\nexport class AddArchiTemplateUseCase {\n\n    constructor(private architectureRepository: ArchitectureRepository){}\n\n    async execute(architectureDto: ArchitectureDto): Promise<any> {\n        try {\n            const architecture = ArchitectureMapper.toDomain(architectureDto)\n        return await this.architectureRepository.addTemplateToPersistence(architecture)\n        } catch (error) {\n            throw error\n        }\n        \n    }\n}", "import { DynamoDB } from 'aws-sdk';\nimport { ArchitectureRepository } from '../../../bounded-contexts/build-infra/domain/repositories/architecture.repository';\nimport { Architecture } from '../../../bounded-contexts/build-infra/domain/entities/architecture';\n\n\nexport class DynamoDbArchitectureRepository implements ArchitectureRepository {\n\n    private dynamo = new DynamoDB.DocumentClient();\n\n    constructor(private tableName: string){}\n\n    async addTemplateToPersistence(architecture: Architecture):Promise<DynamoDB.DocumentClient.PutItemOutput> {\n        try {\n            return await this.dynamo.put({TableName: this.tableName, Item: architecture}).promise()\n        } catch (error) {\n            console.error('Error adding item to DynamoDB:', error);\n            throw error\n        }\n    }\n\n    async removeTemplateFromPersistence(id: string): Promise<DynamoDB.DocumentClient.DeleteItemOutput> {\n        try {\n            return await this.dynamo.delete({TableName: this.tableName, Key: {id}}).promise()\n        } catch (error) {\n            console.error('Error deleting item to DynamoDB:', error);\n            throw error;\n        }\n    }\n\n    async updateTemplateFromPersistence(id: string): Promise<any> {\n        throw \"Method Not Implemented\"\n    }\n\n    async getArchisByOptions(options: {}): Promise<Architecture[]> {\n        return []\n    }\n\n    async getAllArchis(): Promise<Architecture[]> {\n        try {\n            const result = await this.dynamo.scan({TableName: this.tableName}).promise()\n            return result.Items as Architecture[]\n        } catch (error) {\n            console.error('Error getting all items from DynamoDB:', error);\n            throw error;\n        }\n    }\n\n    async getOneArchiById(id: string): Promise<Architecture> {\n        try {\n            const result = await this.dynamo.get({TableName: this.tableName, Key: {id}}).promise()\n            return result.Item as Architecture\n        } catch (error) {\n            console.error('Error getting item from DynamoDB:', error);\n            throw error;\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["deleteArchiLambda_exports", "__export", "handler", "__toCommonJS", "Architecture", "status", "provider", "description", "name", "resources", "id", "resource", "res", "ArchitectureDto", "status", "provider", "description", "name", "resources", "id", "ArchitectureMapper", "dto", "Architecture", "body", "ArchitectureDto", "AddArchiTemplateUseCase", "architectureRepository", "architectureDto", "architecture", "ArchitectureMapper", "error", "import_aws_sdk", "DynamoDbArchitectureRepository", "tableName", "architecture", "error", "id", "options", "DYNAMODB_TABLE", "architectureRepository", "DynamoDbArchitectureRepository", "handler", "event", "dto", "ArchitectureMapper", "result", "AddArchiTemplateUseCase", "e"]
}
